const s=location.pathname.split("/").slice(0,-1).join("/"),m=[s+"/app/immutable/entry/app.DxXAohfa.js",s+"/app/immutable/nodes/0.DZhQO3wb.js",s+"/app/immutable/assets/0.DAltcoRu.css",s+"/app/immutable/nodes/1.C8nw_V0n.js",s+"/app/immutable/nodes/2.CpbITT-W.js",s+"/app/immutable/assets/2.DyboXUWQ.css",s+"/app/immutable/chunks/BAd9tqmk.js",s+"/app/immutable/chunks/BE-jNo8g.js",s+"/app/immutable/chunks/BK39a6HS.js",s+"/app/immutable/chunks/C05S_emN.js",s+"/app/immutable/chunks/ClYOksXd.js",s+"/app/immutable/chunks/DTHVy8d6.js",s+"/app/immutable/chunks/GgqtVxTR.js",s+"/app/immutable/chunks/UfaH9R3J.js",s+"/app/immutable/entry/start.DdmCnhk-.js"],u=[s+"/images/favicon_512.png",s+"/manifest.json"],l="1742326336278",i=`cache-${l}`,p=[...m,...u];self.addEventListener("install",a=>{async function n(){await(await caches.open(i)).addAll(p)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),c=await caches.open(i);if(p.includes(t.pathname)){const e=await c.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&c.put(a.request,e.clone()),e}catch(e){const o=await c.match(a.request);if(o)return o;throw e}}a.respondWith(n())});
